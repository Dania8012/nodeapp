# cd-pipeline.yml
trigger:
  branches:
    include:
    - main
  paths:
    include:
    - eks_resources/**

# resources:
#   pipelines:
#   - pipeline: ci-pipeline
#     source: 'ci-pipeline'
#     trigger: true

stages:
- stage: Validate
  jobs:
  - job: ValidateManifests
    steps:
    - script: |
        echo "Installing kubeval..."
        # Download with proper following of redirects and error handling
        sudo curl -sSL -o /usr/local/bin/kubeval \
          -L "https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64" \
          || (echo "##vso[task.logissue type=error]Failed to download kubeval"; exit 1)
        
        # Verify the download is actually a binary
        file /usr/local/bin/kubeval | grep -q "ELF" || (echo "##vso[task.logissue type=error]Downloaded file is not a valid binary"; exit 1)
        
        # Set execute permissions
        sudo chmod +x /usr/local/bin/kubeval
        
        # Verify installation
        if ! kubeval --version; then
          echo "##vso[task.logissue type=error]kubeval installation failed"
          exit 1
        fi
        
        # Validate manifests with error handling
        echo "Validating Kubernetes manifests..."
        kubeval --strict --ignore-missing-schemas eks_resources/*.yaml || exit 1
      displayName: 'Install and validate with kubeval'
      env:
        GITHUB_TOKEN: $(github-token)  # Optional: if you have rate limiting issues

- stage: Deploy
  dependsOn: Validate
  jobs:
  - deployment: DeployToAKS
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aksconn'
              namespace: 'default'
              manifests: 'eks_resources/*.yaml'